{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/Input/Input.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","Input","urlExp","state","value","props","error","isSaved","updateState","updatedValue","setState","handleChange","event","target","validateUrl","name","saveValue","test","validateValue","includes","prevProps","this","type","id","placeholder","required","onChange","onBlur","Component","NewMovie","initialtState","saveMovieProperty","addMovie","preventDefault","Object","values","every","onSubmit","keys","nameKey","App","moviesFromServer","savedMovie","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.83b34fce.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Input extends Component {\n  // eslint-disable-next-line max-len\n  urlExp = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/\n\n  state = {\n    value: this.props.value,\n    error: '',\n    isSaved: false,\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.value !== this.props.value) {\n      this.updateState(this.props.value);\n    }\n  }\n\n  updateState = (updatedValue) => {\n    this.setState({\n      value: updatedValue,\n      error: '',\n      isSaved: !!updatedValue,\n    });\n  }\n\n  handleChange = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      value,\n    });\n  }\n\n  validateUrl = () => {\n    const { name, saveValue } = this.props;\n    const { value } = this.state;\n\n    if (!this.urlExp.test(value)) {\n      this.setState({\n        error: 'Please add correct url',\n      });\n\n      return;\n    }\n\n    saveValue(name, value);\n\n    this.setState({\n      error: '',\n    });\n  }\n\n  validateValue = () => {\n    const { name, saveValue } = this.props;\n    const { value } = this.state;\n\n    if (!this.state.value) {\n      this.setState({\n        error: `Please add ${name}`,\n      });\n\n      return;\n    }\n\n    if (name.includes('Url')) {\n      this.validateUrl();\n\n      return;\n    }\n\n    saveValue(name, value);\n\n    this.setState({\n      error: '',\n    });\n  }\n\n  render() {\n    const { name } = this.props;\n    const { error, value, isSaved } = this.state;\n\n    return (\n      <div className=\"form-row\">\n        <div className=\"col-md-12 mb-2\">\n          {\n            name !== 'description'\n              ? (\n                <input\n                  type=\"text\"\n                  className={`form-control myInput\n                  ${error ? 'is-invalid' : ''}\n                  ${isSaved ? 'is-valid' : ''}`}\n                  id={name}\n                  placeholder={name}\n                  value={value}\n                  required\n                  onChange={this.handleChange}\n                  onBlur={this.validateValue}\n                />\n              )\n              : (\n                <textarea\n                  type=\"text\"\n                  className={`form-control myInput\n                  ${error ? 'is-invalid' : ''}\n                  ${isSaved ? 'is-valid' : ''}`}\n                  id={name}\n                  placeholder={name}\n                  value={value === null ? '' : value}\n                  required\n                  onChange={this.handleChange}\n                  onBlur={this.validateValue}\n                />\n              )\n          }\n          <div className=\"valid-feedback\">\n            Looks good!\n          </div>\n          <div className=\"invalid-feedback\">\n            {error}\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  saveValue: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from '../Input';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  initialtState = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  state = {\n    ...this.initialtState,\n  };\n\n  saveMovieProperty = (name, value) => {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  addMovie = (event) => {\n    event.preventDefault();\n\n    if (Object.values(this.state).every(value => value)) {\n      this.props.addMovie({ ...this.state });\n\n      this.setState({\n        ...this.initialtState,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <form className=\"needs-validation\" onSubmit={this.addMovie}>\n        {\n          Object.keys(this.state).map(nameKey => (\n            <Input\n              key={nameKey}\n              name={nameKey}\n              value={this.state[nameKey]}\n              saveValue={this.saveMovieProperty}\n            />\n          ))\n        }\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary w-100\"\n        >\n          add new movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (savedMovie) => {\n    this.setState((prevState) => {\n      return {\n        movies: [...prevState.movies, savedMovie],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <h3 className=\"display-4 mb-4 text-center\">Add movie</h3>\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}