{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/Input/Input.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","urlExp","Input","state","value","props","error","isSaved","updateState","updatedValue","setState","handleChange","event","target","validateUrl","name","saveValue","test","validateValue","includes","prevProps","this","styleClasses","ClassNames","type","id","placeholder","required","onChange","onBlur","Component","initialtState","NewMovie","saveMovieProperty","addMovie","preventDefault","Object","values","every","onSubmit","keys","App","moviesFromServer","savedMovie","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b6fc918.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport ClassNames from 'classnames';\nimport PropTypes from 'prop-types';\n\n// eslint-disable-next-line max-len\nconst urlExp = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nexport class Input extends Component {\n  state = {\n    value: this.props.value,\n    error: '',\n    isSaved: false,\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.value !== null && prevProps.value !== this.props.value) {\n      this.updateState(this.props.value);\n    }\n  }\n\n  updateState = (updatedValue) => {\n    this.setState({\n      value: updatedValue,\n      error: '',\n      isSaved: !!updatedValue,\n    });\n  }\n\n  handleChange = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      value,\n    });\n  }\n\n  validateUrl = () => {\n    const { name, saveValue } = this.props;\n    const { value } = this.state;\n\n    if (!urlExp.test(value)) {\n      this.setState({\n        error: 'Please add correct url',\n        isSaved: false,\n      });\n\n      saveValue(name, null);\n\n      return;\n    }\n\n    saveValue(name, value);\n\n    this.setState({\n      error: '',\n    });\n  }\n\n  validateValue = () => {\n    const { name, saveValue } = this.props;\n    const { value } = this.state;\n\n    if (!this.state.value) {\n      this.setState({\n        error: `Please add ${name}`,\n        isSaved: false,\n      });\n\n      saveValue(name, null);\n\n      return;\n    }\n\n    if (name.includes('Url')) {\n      this.validateUrl();\n\n      return;\n    }\n\n    saveValue(name, value);\n\n    this.setState({\n      error: '',\n    });\n  }\n\n  render() {\n    const { name } = this.props;\n    const { error, value, isSaved } = this.state;\n\n    const styleClasses = ClassNames('form-control', 'myInput', {\n      'is-invalid': error,\n      'is-valid': isSaved,\n    });\n\n    return (\n      <div className=\"form-row\">\n        <div className=\"col-md-12 mb-2\">\n          {\n            name !== 'description'\n              ? (\n                <input\n                  type=\"text\"\n                  className={styleClasses}\n                  id={name}\n                  placeholder={name}\n                  value={value === null ? '' : value}\n                  required\n                  onChange={this.handleChange}\n                  onBlur={this.validateValue}\n                />\n              )\n              : (\n                <textarea\n                  type=\"text\"\n                  className={styleClasses}\n                  id={name}\n                  placeholder={name}\n                  value={value === null ? '' : value}\n                  required\n                  onChange={this.handleChange}\n                  onBlur={this.validateValue}\n                />\n              )\n          }\n          <div className=\"valid-feedback\">\n            Looks good!\n          </div>\n          <div className=\"invalid-feedback\">\n            {error}\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOf([\n    PropTypes.instanceOf(null),\n    PropTypes.string.isRequired]),\n  saveValue: PropTypes.func.isRequired,\n};\n\nInput.defaultProps = {\n  value: '',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from '../Input';\nimport './NewMovie.scss';\n\nconst initialtState = {\n  title: null,\n  description: null,\n  imgUrl: null,\n  imdbUrl: null,\n  imdbId: null,\n};\n\nexport class NewMovie extends Component {\n  state = {\n    ...initialtState,\n  };\n\n  saveMovieProperty = (name, value) => {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  addMovie = (event) => {\n    event.preventDefault();\n\n    if (Object.values(this.state).every(value => value)) {\n      this.props.addMovie({ ...this.state });\n\n      this.setState({\n        ...initialtState,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <form className=\"needs-validation\" onSubmit={this.addMovie}>\n        {\n          Object.keys(this.state).map(key => (\n            <Input\n              key={key}\n              name={key}\n              value={this.state[key]}\n              saveValue={this.saveMovieProperty}\n            />\n          ))\n        }\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary w-100\"\n        >\n          add new movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (savedMovie) => {\n    this.setState((prevState) => {\n      return {\n        movies: [...prevState.movies, savedMovie],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <h3 className=\"display-4 mb-4 text-center\">Add movie</h3>\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}