{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/Input/Input.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","urlExp","Input","validateUrl","props","name","saveValue","value","test","validateValue","includes","this","changeValue","error","styleClasses","ClassNames","type","id","placeholder","required","onChange","e","onBlur","Component","initialtState","NewMovie","state","inputValues","inputErrors","saveMovieProperty","setState","prevState","addMovie","event","preventDefault","Object","values","every","changeInputValue","target","onSubmit","keys","App","moviesFromServer","savedMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e3b85e2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport ClassNames from 'classnames';\nimport PropTypes from 'prop-types';\n\n// eslint-disable-next-line max-len\nconst urlExp = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nexport class Input extends Component {\n  // componentDidUpdate(prevProps) {\n  //   if (prevProps.value !== this.props.value) {\n  //     this.updateState(this.props.value);\n  //   }\n  // }\n\n  // updateState = (updatedValue) => {\n  //   if (updatedValue !== null) {\n  //     this.setState({\n  //       value: this.props.value,\n  //       error: '',\n  //       isSaved: !!updatedValue,\n  //     });\n  //   }\n  // }\n\n  validateUrl = () => {\n    const { name, saveValue, value } = this.props;\n\n    if (!urlExp.test(value)) {\n      saveValue(name, 'Please add correct url');\n\n      return;\n    }\n\n    saveValue(name);\n  }\n\n  validateValue = () => {\n    const { name, saveValue, value } = this.props;\n\n    if (!value) {\n      saveValue(name, `Please add ${name}`);\n\n      return;\n    }\n\n    if (name.includes('Url')) {\n      this.validateUrl();\n\n      return;\n    }\n\n    saveValue(name);\n  }\n\n  render() {\n    const { name, changeValue, value, error } = this.props;\n\n    const styleClasses = ClassNames('form-control', 'myInput', {\n      'is-invalid': error,\n    });\n\n    return (\n      <div className=\"form-row\">\n        <div className=\"col-md-12 mb-2\">\n          {\n            name !== 'description'\n              ? (\n                <input\n                  type=\"text\"\n                  className={styleClasses}\n                  id={name}\n                  placeholder={name}\n                  value={value}\n                  required\n                  onChange={e => changeValue(e, name)}\n                  onBlur={this.validateValue}\n                />\n              )\n              : (\n                <textarea\n                  type=\"text\"\n                  className={styleClasses}\n                  id={name}\n                  placeholder={name}\n                  value={value}\n                  required\n                  onChange={e => changeValue(e, name)}\n                  onBlur={this.validateValue}\n                />\n              )\n          }\n          <div className=\"invalid-feedback\">\n            {error}\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  changeValue: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n  saveValue: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from '../Input';\nimport './NewMovie.scss';\n\nconst initialtState = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\nexport class NewMovie extends Component {\n  state = {\n    inputValues: initialtState,\n    inputErrors: initialtState,\n  };\n\n  saveMovieProperty = (name, error = '') => {\n    this.setState((prevState) => {\n      return {\n        inputValues: {\n          ...prevState.inputValues,\n          [name]: prevState.inputValues[name],\n        },\n        inputErrors: {\n          ...prevState.inputErrors,\n          [name]: error,\n        },\n      };\n    });\n  }\n\n  addMovie = (event) => {\n    event.preventDefault();\n\n    if (Object.values(this.state.inputErrors).every(error => !error)\n      && Object.values(this.state.inputValues).every(value => value)) {\n      this.props.addMovie({ ...this.state.inputValues });\n\n      this.setState({\n        inputValues: initialtState,\n        inputErrors: initialtState,\n      });\n    }\n  }\n\n  changeInputValue = (event, name) => {\n    const { value } = event.target;\n\n    this.setState((prevState) => {\n      return {\n        inputValues: {\n          ...prevState.inputValues,\n          [name]: value,\n        },\n      };\n    });\n  }\n\n  render() {\n    return (\n      <form className=\"needs-validation\" onSubmit={this.addMovie}>\n        {\n          Object.keys(this.state.inputValues).map(key => (\n            <Input\n              key={key}\n              name={key}\n              value={this.state.inputValues[key]}\n              error={this.state.inputErrors[key]}\n              changeValue={this.changeInputValue}\n              saveValue={this.saveMovieProperty}\n            />\n          ))\n        }\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary w-100\"\n        >\n          add new movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (savedMovie) => {\n    this.setState((prevState) => {\n      return {\n        movies: [...prevState.movies, savedMovie],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <h3 className=\"display-4 mb-4 text-center\">Add movie</h3>\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}